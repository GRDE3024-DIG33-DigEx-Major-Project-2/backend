{
  "/auth/login": {
    "post": {
      "description": "Attempts to log a user in. userType can equal organizer or attendee",
      "tags": ["Auth Route"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Login"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Login successful, new access token sent back as JSON"
        },
        "400": {
          "description": "Failed to log a user in"
        }
      }
    }
  },
  "/auth/validate": {
    "get": {
      "description": "Checks if the sender is authorized through the token in the request Authorization header",
      "tags": ["Auth Route"],
      "responses": {
        "200": {
          "description": "Token was valid, token data sent back as JSON"
        },
        "403": {
          "description": "Token was INVALID or not provided in the request authorization header"
        },
        "500": {
          "description": "Server-side failed to verify the access token"
        }
      },
      "security": [
        {
          "BearerAuth": []
        }
      ]
    }
  },
  "/auth/refresh-tokens": {
    "get": {
      "description": "Uses the refreshToken stored in a cookie to generate a new pair of access and refresh tokens for user auth",
      "tags": ["Auth Route"],
      "responses": {
        "201": {
          "description": "Tokens generated -- accessToken sent in JSON, refreshToken set as HttpOnly cookie 'refreshToken'"
        },
        "401": {
          "description": "Refresh token failed"
        },
        "500": {
          "description": "Server-side failed to refresh the access token and refresh token"
        }
      }
    }
  }
}
